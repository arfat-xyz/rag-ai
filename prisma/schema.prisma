// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String  @unique
  name     String
  password String?

  InboxMessage InboxMessage[]
  Chatbot7     Chatbot7[]
}

model File {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  blobUrl      String
  userEmail    String
  openAIFileId String
  fileName     String
  createdAt    DateTime @default(now())

  @@map("files")
}

model Chatbot {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  userEmail String
  createdAt DateTime @default(now())

  @@map("chatbots")
}

model File2 {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  blobUrl      String
  userEmail    String
  openAIFileId String
  fileName     String
  createdAt    DateTime @default(now())

  @@map("files2")
}

model Chatbot2 {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  userEmail String
  createdAt DateTime @default(now())

  @@map("chatbots2")
}

model File3 {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  blobUrl      String
  userEmail    String
  openAIFileId String
  fileName     String
  createdAt    DateTime @default(now())

  @@map("files3")
}

model Chatbot3 {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  userEmail String
  createdAt DateTime @default(now())

  @@map("chatbots3")
}

model File5 {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  blobUrl      String
  userEmail    String
  openAIFileId String
  fileName     String
  createdAt    DateTime @default(now())

  @@map("files5")
}

model Chatbot5 {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  userEmail String
  createdAt DateTime @default(now())

  @@map("chatbots5")
}

model File6 {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  blobUrl      String
  userEmail    String
  openAIFileId String
  fileName     String
  createdAt    DateTime @default(now())

  @@map("files6")
}

model Chatbot6 {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  userEmail String
  createdAt DateTime @default(now())

  @@map("chatbots6")
}

model File7 {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  blobUrl      String
  userEmail    String
  openAIFileId String
  fileName     String
  createdAt    DateTime @default(now())

  @@map("files7")
}

model Chatbot7 {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  userEmail    String
  user         User           @relation(fields: [userEmail], references: [email])
  createdAt    DateTime       @default(now())
  Conversation Conversation[]

  @@map("chatbots7")
}

model InboxMessage {
  id      String  @id @default(uuid()) @map("_id")
  message String
  User    User?   @relation(fields: [email], references: [email])
  email   String?

  createdAt DateTime @default(now())
}

enum MessageOwnerEnums {
  Author
  User
  Assistant
}

model Message {
  id             String            @id @default(auto()) @map("_id") @db.ObjectId
  message        String
  messageOwner   MessageOwnerEnums
  conversationId String            @db.ObjectId
  conversation   Conversation      @relation(fields: [conversationId], references: [id])
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
}

model Conversation {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  chatbotId    String    @db.ObjectId
  chatbot      Chatbot7  @relation(fields: [chatbotId], references: [id])
  adminEmail   String
  userId       String
  messageArray String[]  @db.ObjectId
  messages     Message[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}
